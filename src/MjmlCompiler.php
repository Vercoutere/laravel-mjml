<?php

namespace Vercoutere\LaravelMjml;

use DOMDocument;
use DOMXPath;
use Illuminate\View\Compilers\BladeCompiler;
use Vercoutere\LaravelMjml\Render\MjmlClient;

class MjmlCompiler extends BladeCompiler
{
    /**
     * @var \Vercoutere\LaravelMjml\Render\MjmlClient
     */
    protected $mjmlClient;

    /**
     * Set the mjml client instance.
     *
     * @param \Vercoutere\LaravelMjml\Render\MjmlClient $client
     * @return \Vercoutere\LaravelMjml\MjmlCompiler
     */
    public function setClient(MjmlClient $client)
    {
        $this->mjmlClient = $client;
        return $this;
    }

    /**
     * Compile the given Blade/mjml template contents.
     *
     * @param  string  $value
     * @return string
     */
    public function compileString($value)
    {
        return parent::compileString($this->compileMjml(
            $value,
            $this->isMjmlBodyWrapped($value),
        ));
    }

    /**
     * Compile the given mjml string.
     *
     * @param string $value
     * @param boolean $wrapped
     * @return string
     */
    protected function compileMjml(string $value, bool $wrapped)
    {
        $mjml = $this->mjmlClient->render(
            $wrapped ?
                $value :
                '<mjml><mj-body>' . $value . '</mj-body></mjml>'
        );

        return $wrapped ? $mjml : $this->extractMjmlContents($mjml);
    }

    /**
     * Extract the body contents of an HTML string generated by mjml.
     *
     * @param string $mjml
     * @return void
     */
    protected function extractMjmlContents(string $mjml)
    {
        $dom = new DOMDocument();
        $dom->loadHTML($mjml, LIBXML_NOERROR | LIBXML_NOWARNING);

        $xPath = new DOMXPath($dom);
        $nodes = $xPath->query('//body/div/node()');

        return implode('', array_map(
            [$dom, 'saveHTML'],
            iterator_to_array($nodes)
        ));
    }

    /**
     * Check if the given string is wrapped in a mjml and mj-body tag.
     *
     * @param string $value
     * @return bool
     */
    protected function isMjmlBodyWrapped(string $value): bool
    {
        return preg_match('/<mjml>\s*<mj-body>.*<\/mj-body>\s*<\/mjml>/is', $value);
    }
}
